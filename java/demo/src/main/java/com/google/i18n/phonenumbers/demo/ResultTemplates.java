// This file was automatically generated by the Soy compiler.
// Please don't edit this file by hand.
// source: /Users/rogg/IdeaProjects/libphonenumber/java/demo/src/main/resources/example/result.soy

package com.google.i18n.phonenumbers.demo;


/**
 * Wrapper class containing {@link com.google.template.soy.data.SoyTemplate} builders for each
 * template in: result.soy.
 */
@javax.annotation.Generated("com.google.template.soy.SoyParseInfoGenerator")
public final class ResultTemplates {

  /**
   * A map of filepath to symbol used for CSS resolution on server edit-refresh.
   */
  private static final com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> __PROVIDED_CSS_MAP__ = com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.String>of();

  /**
   * A list of provided symbols used for css validation on edit refresh.
   */
  private static final com.google.common.collect.ImmutableList<java.lang.String> __PROVIDED_CSS__ = com.google.common.collect.ImmutableList.<java.lang.String>of();

  /**
   * Template params for examples.simple.result.
   */
  public static final class Result extends com.google.template.soy.data.BaseSoyTemplateImpl {

    /**
     * {@param phoneNumber}
     */
    public static final com.google.template.soy.data.SoyTemplateParam<java.lang.String>
        PHONE_NUMBER =
        com.google.template.soy.data.SoyTemplateParam.standard(
            "phoneNumber",
            /* required= */ true,
            com.google.common.reflect.TypeToken.of(java.lang.String.class));
    /**
     * {@param defaultCountry}
     */
    public static final com.google.template.soy.data.SoyTemplateParam<java.lang.String>
        DEFAULT_COUNTRY =
        com.google.template.soy.data.SoyTemplateParam.standard(
            "defaultCountry",
            /* required= */ true,
            com.google.common.reflect.TypeToken.of(java.lang.String.class));
    /**
     * {@param geocodingLocale}
     */
    public static final com.google.template.soy.data.SoyTemplateParam<java.lang.String>
        GEOCODING_LOCALE =
        com.google.template.soy.data.SoyTemplateParam.standard(
            "geocodingLocale",
            /* required= */ true,
            com.google.common.reflect.TypeToken.of(java.lang.String.class));
    /**
     * {@inject csp_style_nonce} Created by ContentSecurityPolicyNonceInjectionPass.
     */
    public static final com.google.template.soy.data.SoyTemplateParam<java.lang.Object>
        CSP_STYLE_NONCE =
        com.google.template.soy.data.SoyTemplateParam.injected(
            "csp_style_nonce",
            /* required= */ false,
            com.google.common.reflect.TypeToken.of(java.lang.Object.class));
    /**
     * {@inject csp_nonce} Created by ContentSecurityPolicyNonceInjectionPass.
     */
    public static final com.google.template.soy.data.SoyTemplateParam<java.lang.Object>
        CSP_NONCE =
        com.google.template.soy.data.SoyTemplateParam.injected(
            "csp_nonce",
            /* required= */ false,
            com.google.common.reflect.TypeToken.of(java.lang.Object.class));
    private static final java.lang.String __NAME__ = "examples.simple.result";
    private static final com.google.common.collect.ImmutableSet<com.google.template.soy.data.SoyTemplateParam<?>> __PARAMS__ = com.google.common.collect.ImmutableSet.of(
        PHONE_NUMBER,
        DEFAULT_COUNTRY,
        GEOCODING_LOCALE);

    private Result(
        com.google.common.collect.ImmutableMap<java.lang.String, com.google.template.soy.data.SoyValueProvider> data) {
      super(data);
    }

    /**
     * Wraps a ListenableFuture<Result> as a SoyTemplate.AsyncWrapper<Result>
     */
    public static com.google.template.soy.data.SoyTemplate.AsyncWrapper<Result> wrapFuture(
        com.google.common.util.concurrent.ListenableFuture<Result> paramsFuture) {
      return new com.google.template.soy.data.SoyTemplate.AsyncWrapper<>(__NAME__, paramsFuture);
    }

    /**
     * Creates a new Builder instance.
     */
    public static Builder builder() {
      return new Builder();
    }

    @java.lang.Override
    public final java.lang.String getTemplateName() {
      return __NAME__;
    }

    public static final class Builder extends
        com.google.template.soy.data.BaseSoyTemplateImpl.AbstractBuilder<Builder, Result> {

      private Builder() {
        super(3);
      }

      @java.lang.Override
      protected com.google.common.collect.ImmutableSet<com.google.template.soy.data.SoyTemplateParam<?>> allParams() {
        return __PARAMS__;
      }

      @java.lang.Override
      protected Result buildInternal(
          com.google.common.collect.ImmutableMap<java.lang.String, com.google.template.soy.data.SoyValueProvider> data) {
        return new Result(data);
      }

      /**
       * Sets phoneNumber.
       */
      @com.google.errorprone.annotations.CanIgnoreReturnValue
      public Builder setPhoneNumber(java.lang.String value) {
        return setParamInternal(PHONE_NUMBER, asString(value));
      }

      /**
       * Future compatible version of {@link #setPhoneNumber(java.lang.String)}.
       */
      @com.google.errorprone.annotations.CanIgnoreReturnValue
      public Builder setPhoneNumberFuture(java.util.concurrent.Future<java.lang.String> future) {
        return setParamInternal(PHONE_NUMBER, asFuture(future, AbstractBuilder::asString));
      }

      /**
       * Sets defaultCountry.
       */
      @com.google.errorprone.annotations.CanIgnoreReturnValue
      public Builder setDefaultCountry(java.lang.String value) {
        return setParamInternal(DEFAULT_COUNTRY, asString(value));
      }

      /**
       * Future compatible version of {@link #setDefaultCountry(java.lang.String)}.
       */
      @com.google.errorprone.annotations.CanIgnoreReturnValue
      public Builder setDefaultCountryFuture(java.util.concurrent.Future<java.lang.String> future) {
        return setParamInternal(DEFAULT_COUNTRY, asFuture(future, AbstractBuilder::asString));
      }

      /**
       * Sets geocodingLocale.
       */
      @com.google.errorprone.annotations.CanIgnoreReturnValue
      public Builder setGeocodingLocale(java.lang.String value) {
        return setParamInternal(GEOCODING_LOCALE, asString(value));
      }

      /**
       * Future compatible version of {@link #setGeocodingLocale(java.lang.String)}.
       */
      @com.google.errorprone.annotations.CanIgnoreReturnValue
      public Builder setGeocodingLocaleFuture(
          java.util.concurrent.Future<java.lang.String> future) {
        return setParamInternal(GEOCODING_LOCALE, asFuture(future, AbstractBuilder::asString));
      }

    }
  }

}
